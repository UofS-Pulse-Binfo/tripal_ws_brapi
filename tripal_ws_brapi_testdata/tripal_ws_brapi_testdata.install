<?php
/**
 * @file
 * Contains actions performed during install/uninstall.
 */

/**
 * Implements hook_enable().
 */
function tripal_ws_brapi_testdata_enable() {
  // Update phenotype table to include project_id, stock_id, unit_id
  // Extend chado phenotype/phenotypeprop.
  $arr_fields = array(
    'project_id' => array('table' => 'phenotype',     'ref' => 'project', 'ref_id' => 'project_id'),
    'stock_id'   => array('table' => 'phenotype',     'ref' => 'stock',   'ref_id' => 'stock_id'),
    'cvalue_id'  => array('table' => 'phenotypeprop', 'ref' => 'cvterm',  'ref_id' => 'cvterm_id'),
    'unit_id'    => array('table' => 'phenotype',     'ref' => 'cvterm',  'ref_id' => 'cvterm_id'),
  );

  foreach($arr_fields as $field => $items) {
    $exists = db_field_exists('chado.' . $items['table'], $field);

    if (!$exists) {
      $sql = sprintf('ALTER TABLE {%s} ADD COLUMN %s integer REFERENCES {%s} (%s)',
      $items['table'], $field, $items['ref'], $items['ref_id']);

      chado_query($sql);
    }
  }
}

/**
 * Implements hook_install().
 */
function tripal_ws_brapi_testdata_install() {
  // Create genotype call table.
  // This table definition is from ND_Genotypes module.
  $gct = 'genotype_call';
  $exists = db_field_exists('chado.' . $gct, 'genotype_call_id');

  if (!$exists) {
    $genotype_call = [
      'description' => 'A more compact way to store genotype calls.',
      'fields' => [
        'genotype_call_id' => [
          'name' => 'genotype_call_id',
          'title' => 'Call ID',
          'description' => 'The primary key',
          'pgsql_type' => 'bigserial',
          'views_type' => 'int',
        ],
        'variant_id' => [
          'name' => 'variant_id',
          'title' => 'Variant ID',
          'description' => 'Links to the feature describing the loci with variation.',
          'pgsql_type' => 'bigint',
          'views_type' => 'int',
          'not null' => TRUE,
        ],
        'marker_id' => [
          'name' => 'marker_id',
          'title' => 'Marker ID',
          'description' => 'Links to the feature describing the marker.',
          'pgsql_type' => 'bigint',
          'views_type' => 'int',
          'not null' => TRUE,
        ],
        'genotype_id' => [
          'name' => 'genotype_id',
          'title' => 'Genotype ID',
          'description' => 'Links to the allele call.',
          'pgsql_type' => 'bigint',
          'views_type' => 'int',
          'not null' => TRUE,
        ],
        'project_id' => [
          'name' => 'project_id',
          'title' => 'Project ID',
          'description' => 'Links to the project grouping calls from a single analysis.',
          'pgsql_type' => 'bigint',
          'views_type' => 'int',
          'not null' => TRUE,
        ],
        'stock_id' => [
          'name' => 'stock_id',
          'title' => 'Stock ID',
          'description' => 'Links to the DNA stock assayed by the marker.',
          'pgsql_type' => 'bigint',
          'views_type' => 'int',
          'not null' => TRUE,
        ],
        'meta_data' => [
          'name' => 'meta_data',
          'title' => 'Meta data',
          'description' => 'JSON storage of any addition meta-data for the call.',
          'pgsql_type' => ($version >= 9.4) ? 'jsonb' : 'json',
          'views_type' => 'text',
        ],
      ],
      'primary key' => ['genotype_call_id'],
      'unique keys' => [],
      'foreign keys' => [
        'feature' => [
          'table' => 'feature',
          'columns' => [
            'variant_id' => 'feature_id',
            'marker_id' => 'feature_id'
          ],
        ],
        'genotype' => [
          'table' => 'genotype',
          'columns' => [
            'genotype_id' => 'genotype_id'
          ],
        ],
        'project' => [
          'table' => 'project',
          'columns' => [
            'project_id' => 'project_id'
          ],
        ],
        'stock' => [
          'table' => 'stock',
          'columns' => [
            'stock_id' => 'stock_id'
          ],
        ],
      ],
      'indexes' => [
        'genotypecall_variant_id' => ['variant_id'],
        'genotypecall_marker_id' => ['marker_id'],
        'genotypecall_project_id' => ['project_id'],
        'genotypecall_stock_id' => ['stock_id'],
      ],
    ];

    chado_create_custom_table($gct, $genotype_call, TRUE, NULL, FALSE);
  }
}
